name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

env:
  PYTHON_VERSION: "3.11"
  TERRAFORM_VERSION: "1.5.0"

jobs:
  lint-python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
      
      - name: Lint with ruff
        run: |
          ruff check src/ spark/ airflow/
      
      - name: Type check with mypy
        run: |
          mypy src/ --ignore-missing-imports
        continue-on-error: true

  test-python:
    name: Test Python Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml --cov-report=term
        continue-on-error: true

  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Terraform Format Check
        run: |
          cd infra/terraform
          terraform fmt -check -recursive
      
      - name: Terraform Init
        run: |
          cd infra/terraform
          terraform init -backend=false
      
      - name: Terraform Validate
        run: |
          cd infra/terraform
          terraform validate

  validate-dbt:
    name: Validate dbt
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dbt
        run: |
          cd dbt
          pip install -r requirements.txt
      
      - name: dbt Parse
        run: |
          cd dbt
          dbt parse --profiles-dir .
        env:
          GCP_PROJECT_ID: ci-project
        continue-on-error: true
      
      - name: dbt Compile
        run: |
          cd dbt
          dbt compile --profiles-dir . --target ci
        env:
          GCP_PROJECT_ID: ci-project
        continue-on-error: true

  lint-sql:
    name: Lint SQL
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup SQLFluff
        run: |
          pip install sqlfluff sqlfluff-templater-dbt
      
      - name: Lint SQL files
        run: |
          sqlfluff lint sql/ dbt/models/ --dialect bigquery
        continue-on-error: true

  build-ingestor:
    name: Build Ingestor Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          cd src/ingestor
          docker build -t aqi-ingestor:ci .

  build-dashboard:
    name: Build Dashboard Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          cd app
          docker build -t aqi-dashboard:ci .
