name: Deploy to GCP

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  TERRAFORM_VERSION: "1.5.0"
  GCP_REGION: "asia-southeast1"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Terraform Init
        run: |
          cd infra/terraform
          terraform init
      
      - name: Terraform Plan
        run: |
          cd infra/terraform
          terraform plan -out=tfplan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_gcs_bucket_raw: ${{ secrets.GCS_BUCKET_RAW }}
          TF_VAR_gcs_bucket_quarantine: ${{ secrets.GCS_BUCKET_QUAR }}
      
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/terraform/tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: infra/terraform/
      
      - name: Terraform Init
        run: |
          cd infra/terraform
          terraform init
      
      - name: Terraform Apply
        run: |
          cd infra/terraform
          terraform apply -auto-approve tfplan

  build-and-deploy-ingestor:
    name: Build and Deploy Ingestor
    runs-on: ubuntu-latest
    needs: terraform-apply
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker
      
      - name: Build and Push Image
        run: |
          cd src/ingestor
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:${{ github.sha }}
          docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:latest
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy aqi-ingestor \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-ingestor:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --service-account aqi-ingestor-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GCS_BUCKET_RAW=${{ secrets.GCS_BUCKET_RAW }},PUBSUB_TOPIC=aqi-raw-landed" \
            --max-instances 10 \
            --min-instances 0 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 300 \
            --allow-unauthenticated

  build-and-deploy-dashboard:
    name: Build and Deploy Dashboard
    runs-on: ubuntu-latest
    needs: terraform-apply
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker
      
      - name: Build and Push Image
        run: |
          cd app
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:${{ github.sha }}
          docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:latest
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy aqi-dashboard \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/aqi-dashboard:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --service-account aqi-ingestor-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},BQ_DATASET_MARTS=marts_aqi,MODE=bigquery" \
            --max-instances 5 \
            --min-instances 0 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 300 \
            --allow-unauthenticated

  upload-spark-job:
    name: Upload Spark Job to GCS
    runs-on: ubuntu-latest
    needs: terraform-apply
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Upload Spark scripts
        run: |
          gsutil cp spark/cleanse.py gs://${{ secrets.GCS_BUCKET_RAW }}/spark/
          gsutil cp spark/job_config.json gs://${{ secrets.GCS_BUCKET_RAW }}/spark/

  run-dbt:
    name: Run dbt Models
    runs-on: ubuntu-latest
    needs: [terraform-apply, upload-spark-job]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Install dbt
        run: |
          cd dbt
          pip install -r requirements.txt
      
      - name: dbt Run
        run: |
          cd dbt
          dbt run --profiles-dir . --target prod
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          DBT_SERVICE_ACCOUNT_PATH: /tmp/sa_key.json
      
      - name: dbt Test
        run: |
          cd dbt
          dbt test --profiles-dir . --target prod
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          DBT_SERVICE_ACCOUNT_PATH: /tmp/sa_key.json

  smoke-test:
    name: Smoke Test Pipeline
    runs-on: ubuntu-latest
    needs: [build-and-deploy-ingestor, build-and-deploy-dashboard]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Test Ingestor Health
        run: |
          INGESTOR_URL=$(gcloud run services describe aqi-ingestor --region=${{ env.GCP_REGION }} --format='value(status.url)')
          curl -f $INGESTOR_URL/healthz || exit 1
      
      - name: Test Dashboard Health
        run: |
          DASHBOARD_URL=$(gcloud run services describe aqi-dashboard --region=${{ env.GCP_REGION }} --format='value(status.url)')
          curl -f $DASHBOARD_URL/_stcore/health || exit 1
      
      - name: Trigger Test Ingestion
        run: |
          INGESTOR_URL=$(gcloud run services describe aqi-ingestor --region=${{ env.GCP_REGION }} --format='value(status.url)')
          curl -X POST "$INGESTOR_URL/ingest/hourly?city=Bangkok" || exit 1
